<%# @encoding: UTF-8 %>
const FACEBOOK_ICON = "<i class='fa-brands fa-square-facebook' style='color: #506679;' aria-hidden='true'></i>"
const TWITTER_ICON = "<i class='fa-brands fa-square-twitter' style='color: #55acee;' aria-hidden='true'></i>"
const PINTEREST_ICON = "<i class='fa-brands fa-square-pinterest' style='color:red' aria-hidden='true'></i>"
const LINKEDIN = "<i class='fa-brands fa-linkedin' style='color:#0077B5' aria-hidden='true'></i>"
const INSTAGRAM_ICON = "<i class='fa-brands fa-instagram' aria-hidden='true'></i>"
const URL_REGEX = new RegExp(
    "(^|[ \t\r\n])((ftp|http|https|gopher|mailto|news|nntp|telnet|wais|file|prospero|aim|webcal):(([A-Za-z0-9$_.+!*(),;/?:@&~=-])|%[A-Fa-f0-9]{2}){2,}(#([a-zA-Z0-9][a-zA-Z0-9$_.+!*(),;/?:@&~=%-]*))?([A-Za-z0-9$_+!*();/?:~-]))"
    , "g"
);
const PLACE_HOLDERS = <%= SmPlaceholder::TYPES + Account::ACCOUNT_PHS %>
const TAGS = <%= SmService.where("sm_type in (?) AND access_token is not null", ['Facebook', 'Twitter']).map{|x| x.sm_type == 'Facebook' ? '@' + x.sm_account_name.parameterize.underscore + '@' : '@' + x.sm_account_name} %>

$(document).ready(function(){
  $('#post_at_date').datepicker({ dateFormat: 'MM dd, yy' }).val()
  $("#search_services").on('input', function(){
    var searchQuery = $(this).val().toString().toLowerCase()
    var searchChars = searchQuery.length
    if(searchChars > 0) {
      var searchResults = getSearchResults(searchQuery)
    } else {
      resetServiceOptions(undefined)
    }
  })

  $(".show-group-members").on('click', function(){
    getGroupMembers($(this))
    $(this).parent().children(".hide-group-members").show()
    $(this).hide()
    return false
  })

  $(".show-stream-groups").on('click', function(){
      getStreamGroups($(this))
      $(this).parent().children(".hide-stream-groups").show()
      $(this).hide()
      return false
  })

  $('#sm-schedule-form').on('submit', function(){
    const dateSelected     = new Date($('#post_at_date').val());
    const dateTimeSelected = new Date(dateSelected.getFullYear(),
                                      dateSelected.getMonth(),
                                      dateSelected.getDate(),
                                      parseInt($('#date_post_at_hour').val()),
                                      parseInt($('#post_at_minute').val()));

    // =====================================================
    // Get the current time in Pacific Time as a Date object
    // -----------------------------------------------------
    const dateTimeInPacific = new Date(new Date(Date.now())
                                          .toLocaleString("en-US",
                                          {timeZone: "America/Los_Angeles"}));

    if (dateTimeInPacific.getTime() >= dateTimeSelected) {
      alert('Schedule time needs to be in the future');
      return false;
    } else if ((Math.abs(dateTimeSelected - dateTimeInPacific.getTime()) / 36e5) < 1){
      return confirm('Your schedule time is less than One Hour Away, Are you ' +
                      'sure you still want to schedule?')
    }
  })

  $(".hide-group-members").on('click', function(){
    var groupDivId = $(this).data("group-div-id")
    $("#" + groupDivId).empty()
    $(this).parent().children(".show-group-members").show()
    $(this).hide()
    return false
  })

  $(".hide-stream-groups").on('click', function(){
      var streamDivId = $(this).data("stream-div-id")
      $("#" + streamDivId).empty()
      $(this).parent().children(".show-stream-groups").show()
      $(this).hide()
      return false
  })

  $(document).on('click', '.add-sm-service', function(){
    addService(this)
  })
  $(document).on('click', '.remove-sm-service', function(){
    removeService(this)
  })

  $('#reconnect-services').on('submit', function() {
    if (!$("input:checkbox:checked").length > 0){
      alert('One Service or More Must Be Selected To Submit');
      return false;
    }
  });

  var fbMax = '<%= SocialMediaSync::FacebookSync::POST_LENGTH %>';
  var textArea = $('.limited-text')
  var twitterMax = 280;
  smCounter(fbMax, twitterMax);
  if(textArea.length > 0){previewPost();}
    textArea.on('input', function(){
    previewPost()
    smCounter(fbMax, twitterMax);
  });
    if(textArea.length > 0) {
        $( function() {
            $(".limited-text")
                .bind("keydown", function(event) {
                    // Avoid tab click moving focus away
                    if (event.keyCode === $.ui.keyCode.TAB
                        && $(this).data("ui-autocomplete").menu.active) {
                        event.preventDefault();
                    }
                })
                .autocomplete({
                    minLength: 1,
                    source: function(request, response) {
                        var results = [],
                            selectionStart = this.element[0].selectionStart
                        term = extractLast(request.term.substring(0, selectionStart));

                        if (term.length > 0 && term.includes('@') && term.length > 1) {
                            results = $.ui.autocomplete.filter(TAGS, term);
                        }
                        response(results);
                    },
                    focus: function() {
                        return false; // prevent value inserted on focus
                    },
                    select: function(event, ui) {
                        var terms = split(this.value.substring(0, this.selectionStart));
                        terms.pop();  // remove the current input
                        terms.push(ui.item.value);        // add the selected item
                        this.value =
                            $.trim(terms.join(" ") + this.value.substring(this.selectionStart)) + " ";
                        smCounter(fbMax, twitterMax)
                        return false;
                    }
                })
                .data('ui-autocomplete')._renderItem = function (ul, item) {
                return $('<li></li>')
                    .data( "ui-autocomplete-item", item )
                    .append('<a>' + (item.label.slice(-1) == "@" ? FACEBOOK_ICON : TWITTER_ICON) + " " + item.label + '</a>')
                    .appendTo(ul);
            }
        });
    }

  function split(val) {
      return val.split(/ \s*/);
  }

  function extractLast(term) {
      return split(term).pop();
  }
});

function getSearchResults(searchQuery){
  $.ajax({
    type: "GET",
    url: "/social_media_posts/search_sm_services",
    data: { search_query: searchQuery },
    success: function(possibleResults){
      var searchResults = []
      possibleResults.forEach(function(element){
        var lastIndex = searchResults.length
        searchResults[lastIndex] = element
      });
      resetServiceOptions(searchResults)
    }
  });
}

function resetServiceOptions(data){
  var options = $("#search_results")
  options.empty()
  if(data !== undefined) {
    if(data.length === 0){
      options.append("No Results Found")
    } else {
      data.forEach(function(element){
        var account_url = "<a target= '_blank' href=" + "/" + element['account_number'] +  ">" + " Account "+ '</a>' ;
        var page_url = "<a target= '_blank' href=" + getSmUrl(element)[1]  +  ">" + " Page"+ '</a>';
        var dataServiceName = getSmIcon(element) + " " + element['sm_account_name'] + account_url + '|' + page_url
        options.append('<div><span class="fake-link add-sm-service" data-stream-id="' + element['stream_id'] + '" data-stream-name="' + element['stream_name'] + '" data-group-name="' + element['group_name'] +'" data-service-id="' + element['id'] + '" data-account-number="' + element['account_number'] + '" data-service-name="' + dataServiceName + '" data-group-id="' + element['sm_group_id'] +'">Add</span> ' + dataServiceName + '</div>')
      })
    }
  }
}

function getSmIcon(service){
  if(service["sm_type"] === "Facebook"){
    return FACEBOOK_ICON
  } else if (service["sm_type"] === "Twitter"){
    return TWITTER_ICON
  } else if (service["sm_type"] === "Pinterest"){
    return PINTEREST_ICON
  } else if (service["sm_type"] === "LinkedIn"){
      return LINKEDIN
  } else if (service["sm_type"] === "Instagram"){
      return INSTAGRAM_ICON
  }
}

function getGroupMembers(clickedGroup){
  var smGroupId = clickedGroup.data("group-id")
  var smContentId = clickedGroup.data("sm-content-id")
  $.ajax({
    type: "GET",
    url: "/social_media_posts/sm_groups/" + smGroupId + "/group_members",
    data: { sm_content_id: smContentId },
    success: function(members){
      addGroupMembers(members, clickedGroup)
    }
  })
}

function getStreamGroups(clickedStream){
    var smStreamId = clickedStream.data("stream-id")
    $.ajax({
        type: "GET",
        url: "/social_media_posts/sm_streams/" + smStreamId + "/stream_groups",
        data: {},
        success: function(groups){
            addGroupStreams(groups, clickedStream)
        }
    })
}

function addGroupStreams(groups, clickedGroup){
    var streamDivId = clickedGroup.data("stream-div-id")

    if(groups.length === 0){
        $("#" + streamDivId).append('<p class="stream-groups">(None)</p>')
    } else {
        groups.forEach(function(group){
            var group_name = group["name"]
            var groupForDisplay = '<p class="group-streams">' + group_name + '</p>'
            $("#" + streamDivId).append(groupForDisplay)
        })
    }
}

function addGroupMembers(members, clickedGroup){
  var groupDivId = clickedGroup.data("group-div-id")

  if(members.length === 0){
    $("#" + groupDivId).append('<p class="group-member">(None)</p>')
  } else {
    members.forEach(function(member){
      var memberForDisplay = '<p class="group-member">' + getSmUrl(member)[0] + " " + '<a target="_blank" href=' + getSmUrl(member)[1] + '>' + member["sm_account_name"] + '</a>' + '</p>'
      $("#" + groupDivId).append(memberForDisplay)
    })
  }
}

function getSmUrl(member) {
    var memberIcon = ""
    if(member["sm_type"] === "Facebook"){
        var memberIcon = FACEBOOK_ICON
        var sm_url = "https://www.facebook.com/" + member["remote_page_id"]
    } else if (member["sm_type"] === "Twitter"){
        var memberIcon = TWITTER_ICON
        var sm_url = "https://twitter.com/" + member["sm_account_name"]
    } else if (member["sm_type"] === "Pinterest"){
        var memberIcon = PINTEREST_ICON
    } else if (member["sm_type"] === "LinkedIn"){
        var memberIcon = LINKEDIN
        var sm_url = "https://www.linkedin.com/in/" + member["sm_account_name"]
    } else if (member["sm_type"] == "Instagram") {
      var memberIcon = INSTAGRAM_ICON
      var sm_url = "https://www.instagram.com/" + member["sm_account_name"]
    }
    return [memberIcon, sm_url]
}

function addService(selected){
  var serviceId = $(selected).data('service-id')
  var serviceName = $(selected).data('service-name')
  var groupId = $(selected).data('group-id')
  var groupName = $(selected).data('group-name')
  var streamId = $(selected).data('stream-id')
  var streamName = $(selected).data('stream-name')
  var accountNumber = $(selected).data('account-number')

  var alreadyAdded = false
  var removedBefore = false
  $("#selected_services").children().each(function(){
    if($(this).data('service-id') === serviceId){
      alreadyAdded = true
    }
  })
    $("#removed_services").children().each(function(){
        if($(this).data('sm-id') === serviceId){
            removedBefore = true
        }
    })

  if(removedBefore && !alreadyAdded) {
      $('div[data-sm-id="' + serviceId + '"]').remove()
  }

  if(!alreadyAdded){
    $("#selected_services").prepend('<div style="width: max-content; white-space: nowrap" data-service-id="' + serviceId + '" data-account-number="' + accountNumber + '" data-service-name="' + serviceName + '" data-group-id="' + groupId + '"><input type="hidden" value="' + serviceId + '" name="sm_service_ids[]"/><span class="fake-link remove-sm-service" data-stream-id="' + streamId + '" data-stream-name="' + streamName + '" data-group-name="' + groupName + '" data-service-id="' + serviceId + '">Remove</span> ' + $(selected).parent().html().split("/span>")[1].split('Group:')[0] + '</div>')

    if(streamId && groupId) {
        manageStreamNotes(true, streamId, streamName)
        manageGroupNotes(true, groupId, groupName, accountNumber)
    } else if(streamId){
        manageStreamNotes(true, streamId, streamName)
    } else if(groupId){
        manageGroupNotes(true, groupId, groupName, accountNumber)
    }

    var addedServices = $("#selected_services div")
    addedServices.sort(function(itemOne, itemTwo) {
        var nameOne = $(itemOne).data('service-name')
        var nameTwo = $(itemTwo).data('service-name')
        return nameOne > nameTwo
    });
    $.each(addedServices, function(index, row){
      $("#selected_services").append(row);
    })
  }
}

function removeService(selected){
  var groupId = $(selected).parent().data('group-id')
  var groupName = $(selected).data('group-name')
  var streamId = $(selected).data('stream-id')
  var streamName = $(selected).data('stream-name')
  var groupBox = $("input#sm_group" + groupId)
  var selectedServiceId = $(selected).data('service-id')
  var accountNumber = $(selected).parent().data('account-number')
  var serviceName = $(selected).parent().data('service-name')
  if (groupBox.is(":checked")) {
      $("#removed_services").prepend('<div style="width: max-content; white-space: nowrap" data-sm-id="' + selectedServiceId + '">' + '<span class="fake-link add-sm-service" data-service-id="' + selectedServiceId + '" data-account-number="' + accountNumber + '" data-service-name="' + serviceName + '" data-group-id="' + groupId +'">Add</span> ' + $(selected).parent().html().split("/span>")[1] + " Group: " + groupName + '</div>' )
  }
  $('div[data-service-id="' + selectedServiceId + '"]').remove()
  if(streamId && groupId) {
      manageStreamNotes(false, streamId, streamName)
      manageGroupNotes(false, groupId, groupName, accountNumber)
  } else if(streamId){
      manageStreamNotes(false, streamId, streamName)
  } else if(groupId){
      manageGroupNotes(false, groupId, groupName, accountNumber)
  }
}

function selectToggle(toggle, form) {
    var reconnectForm = document.forms[form];
    for( var i=0; i < reconnectForm.length; i++ ) {
        if(toggle) {
            reconnectForm.elements[i].checked = "checked";
        }
        else {
            reconnectForm.elements[i].checked = "";
        }
    }
}

function smCounter(fb_max, twitter_max) {
  if ($('.limited-text').length) {
    var inputLength = $('.limited-text').val().length;
    var fbCounter = document.getElementById("fb-counter");
    var twitterCounter = document.getElementById("twitter-counter");
    fbCounter.innerText = fb_max - inputLength;
    counterColor(fbCounter);
    var urls = $('.limited-text').val().match(URL_REGEX) || [];
    var placeholders = getPlaceholders($('.limited-text').val()) || [];
    jQuery.each(placeholders, function(i, value) {
        if ($.inArray(value.slice(1,-1), PLACE_HOLDERS) === -1 ) {
            alert ('Unknown placeholder ' + value + ' , please choose one of these\n' + PLACE_HOLDERS)
        }
    })
    var twCount = 23 * urls.length;
    var urlsLength = urls.map(function (st) {return st.replace(/\s+/g, '').length}).reduce(function(a, b) { return a + b; }, 0);
    var phChars = 33 * placeholders.length
    var phLength = placeholders.map(function (st) {return st.replace(/\s+/g, '').length}).reduce(function(a, b) { return a + b; }, 0);
    twitterCounter.innerText = twitter_max - inputLength - twCount + urlsLength - phChars + phLength
    counterColor(twitterCounter);
  }
}

function counterColor(counter){
    if (counter.innerText > 0) {
        counter.style.color = "#506679";
    } else {
        counter.style.color = 'red';
    }
}

function getPlaceholders(text){
    return text.split(" ").filter(function(word) {return (word.charAt(0) === '%' && word.slice(-1) === '%' && word.length > 1)})
}

function previewPost(){
    let urls           = $('.limited-text').val().match(URL_REGEX);
    let previewTag     = $('#post-preview a');
    let newImage       = $('input#sm_content_images');
    let newVideo       = $('input#sm_content_videos');
    let attachedImages = $('.content-image');
    let attachedVideos = $('.content-video');

    if(urls !== null && urls.length === 1 && newImage.length === 0 && newVideo.length === 0 && attachedImages.length === 0 && attachedVideos.length === 0){
        previewTag.css('display', 'block');
        previewTag.attr('href', 'https://developers.facebook.com/tools/debug/sharing/?q=' + urls[0]);
    } else {
        previewTag.css('display', 'none');
    }
}
